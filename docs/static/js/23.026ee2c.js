(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{622:function(n,t,e){"use strict";e.r(t);var a={name:"component-exhibition",components:{"firm-demo0":(Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a])}return n})({render:function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[[e("u-table",{attrs:{data:n.tableData,height:"400","total-option":n.totalOption,"show-summary":""}},[e("u-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),n._v(" "),e("u-table-column",{attrs:{prop:"name",label:"姓名"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount1",sortable:"",label:"数值 1"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount2",sortable:"",label:"数值 2"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount3",sortable:"",label:"数值 3"}})],1),n._v(" "),n._m(0),n._v(" "),e("u-table",{staticStyle:{"margin-top":"20px"},attrs:{data:n.tableData,height:"500","summary-method":n.summaryMethod,"show-summary":""}},[e("u-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),n._v(" "),e("u-table-column",{attrs:{prop:"name",label:"姓名"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount1",label:"数值 1（元）"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount2",label:"数值 2（元）"}}),n._v(" "),e("u-table-column",{attrs:{prop:"amount3",label:"数值 3（元）"}})],1)]],2)},staticRenderFns:[function(){var n=this.$createElement,t=this._self._c||n;return t("p",{staticClass:"fenge",staticStyle:{color:"red"}},[this._v("\n    如果你不想使用上面的表格total-option固定合计方式，那么自己写自定义方式吧。 下面的表格平均值出现小数点后很多位，是因为没去取小数点后几位啦！\n    "),t("br"),this._v("\n    如果你想你的合计围栏添加多个，你可以像下面这样自定义合计哦\n  ")])}]},{data:function(){return{totalOption:[{label:"数值 1",unit:"元"},{label:"数值 2",unit:"个"}],tableData:[{id:"12987122",name:"王小虎",amount1:"234",amount2:"3",amount3:10},{id:"12987123",name:"王小虎",amount1:"165",amount2:"4",amount3:12},{id:"12987124",name:"王小虎",amount1:"324",amount2:"1",amount3:9},{id:"12987125",name:"王小虎",amount1:"621",amount2:"2",amount3:17},{id:"12987126",name:"王小虎",amount1:"539",amount2:"4",amount3:15},{id:"12987126",name:"王小虎",amount1:"539",amount2:"4",amount3:15},{id:"12987126",name:"王小虎",amount1:"539",amount2:"4",amount3:15},{id:"12987126",name:"王小虎",amount1:"539",amount2:"4",amount3:15},{id:"12987126",name:"王小虎",amount1:"539",amount2:"4",amount3:15}]}},methods:{summaryMethod:function(n){var t=n.columns,e=n.data;Array.prototype.sum=function(){return function(n,t){for(var e=void 0,a=0;a<n.length;a++)e=t(n[a],e);return e}(this,(function(n,t){return void 0===t?n:t+n}))},Array.prototype.avg=function(){return 0==this.length?0:this.sum(this)/this.length};var a=[],u=[];return t.forEach((function(n,t){if(0===t)a.push("合计"),u.push("平均值");else{var o=e.map((function(t){return Number(t[n.property])}));o.every((function(n){return isNaN(n)}))?a[t]="":(a[t]=o.reduce((function(n,t){var e=Number(t);return isNaN(e)?n:n+t}),0),a[t]='<span style="color: red">'+a[t]+"元</span><br/><span>123</span>");var l=[],m=!0;o.forEach((function(n){if(!isNaN(n)){m=!1;var t=(""+n).split(".")[1];l.push(t?t.length:0)}})),u[t]=m?"":o.avg()}})),[a,u]}}})}},u=e(46),o=Object(u.a)(a,(function(){var n=this.$createElement,t=this._self._c||n;return t("div",[this._m(0),t("p",[this._v("若表格展示的是各类数字，可以在表尾显示各列的合计。")]),t("div",[this._m(1),t("template",{slot:"source"},[t("firm-demo0")],1),t("template",{slot:"highlight"},[this._m(2)])],2)])}),[function(){var n=this.$createElement,t=this._self._c||n;return t("h3",{attrs:{id:"biao-wei-he-ji-xing-yu-el-table-de-he-ji-you-hen-da-de-qu-bie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#biao-wei-he-ji-xing-yu-el-table-de-he-ji-you-hen-da-de-qu-bie"}},[this._v("¶")]),this._v(" 表尾合计行(与el-table的合计有很大的区别)")])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("p",[n._v("将"),e("code",[n._v("show-summary")]),n._v("设置为"),e("code",[n._v("true")]),n._v(" 且设置 total-option属性就会在表格尾部展示合计行。默认情况下，对于合计行，第一列不进行数据求合操作，而是显示「合计」二字（可通过"),e("code",[n._v("sum-text")]),n._v("配置），其余列会将本列所有数值进行求合操作，并显示出来。当然，你也可以定义自己的合计逻辑。使用"),e("code",[n._v("summary-method")]),n._v("并传入一个方法，返回一个二维数组，这个数组中的各项就会显示在合计行的各列中，具体可以参考本例中的第二个表格。")])])},function(){var n=this.$createElement,t=this._self._c||n;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[this._v("<template>\n  <u-table\n    :data=\"tableData\"\n     height=\"400\"\n    :total-option=\"totalOption\"\n    show-summary>\n    <u-table-column\n      prop=\"id\"\n      label=\"ID\"\n      width=\"180\">\n    </u-table-column>\n    <u-table-column\n      prop=\"name\"\n      label=\"姓名\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount1\"\n      sortable\n      label=\"数值 1\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount2\"\n      sortable\n      label=\"数值 2\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount3\"\n      sortable\n      label=\"数值 3\">\n    </u-table-column>\n  </u-table>\n  <p class=\"fenge\" style=\"color: red\">\n    如果你不想使用上面的表格total-option固定合计方式，那么自己写自定义方式吧。 下面的表格平均值出现小数点后很多位，是因为没去取小数点后几位啦！\n    <br />\n    如果你想你的合计围栏添加多个，你可以像下面这样自定义合计哦\n  </p>\n  <u-table\n    :data=\"tableData\"\n    height=\"500\"\n    :summary-method=\"summaryMethod\"\n    show-summary\n    style=\"margin-top: 20px\">\n    <u-table-column\n      prop=\"id\"\n      label=\"ID\"\n      width=\"180\">\n    </u-table-column>\n    <u-table-column\n      prop=\"name\"\n      label=\"姓名\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount1\"\n      label=\"数值 1（元）\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount2\"\n      label=\"数值 2（元）\">\n    </u-table-column>\n    <u-table-column\n      prop=\"amount3\"\n      label=\"数值 3（元）\">\n    </u-table-column>\n  </u-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        totalOption: [\n           {label: '数值 1', 'unit': '元'},\n           {label: '数值 2', 'unit': '个'}\n        ],\n        tableData: [{\n          id: '12987122',\n          name: '王小虎',\n          amount1: '234',\n          amount2: '3',\n          amount3: 10\n        }, {\n          id: '12987123',\n          name: '王小虎',\n          amount1: '165',\n          amount2: '4',\n          amount3: 12\n        }, {\n          id: '12987124',\n          name: '王小虎',\n          amount1: '324',\n          amount2: '1',\n          amount3: 9\n        }, {\n          id: '12987125',\n          name: '王小虎',\n          amount1: '621',\n          amount2: '2',\n          amount3: 17\n        }, {\n          id: '12987126',\n          name: '王小虎',\n          amount1: '539',\n          amount2: '4',\n          amount3: 15\n        }, {\n           id: '12987126',\n           name: '王小虎',\n           amount1: '539',\n           amount2: '4',\n           amount3: 15\n         }, {\n             id: '12987126',\n             name: '王小虎',\n             amount1: '539',\n             amount2: '4',\n             amount3: 15\n           }, {\n             id: '12987126',\n             name: '王小虎',\n             amount1: '539',\n             amount2: '4',\n             amount3: 15\n           }, {\n             id: '12987126',\n             name: '王小虎',\n             amount1: '539',\n             amount2: '4',\n             amount3: 15\n           }]\n      };\n    },\n    methods: {\n       summaryMethod ({ columns, data }) {\n           // 平均值算法（不需要自己去掉）\n           function cacl(arr, callback) {\n               let ret;\n               for (let i=0; i<arr.length;i++) {\n                   ret = callback(arr[i], ret);\n               }\n               return ret;\n           }\n           // 平均值算法（不需要自己去掉）\n           Array.prototype.sum = function () {\n               return cacl(this, function (item, sum) {\n                   if (typeof (sum) == 'undefined') {\n                       return item;\n                   }\n                   else {\n                       return sum += item;\n                   }\n               });\n           };\n           // 平均值算法（不需要自己去掉）\n           Array.prototype.avg = function () {\n               if (this.length == 0) {\n                   return 0;\n               }\n               return this.sum(this) / this.length;\n           };\n           const means = [] // 合计\n           const fenceSums = [] // 平均值\n           columns.forEach((column, columnIndex) => {\n               if (columnIndex === 0) {\n                   means.push('合计')\n                   fenceSums.push('平均值')\n               } else {\n                   const values = data.map(item => Number(item[column.property]));\n                   // 合计\n                   if (!values.every(value => isNaN(value))) {\n                       means[columnIndex] = values.reduce((prev, curr) => {\n                           const value = Number(curr);\n                           if (!isNaN(value)) {\n                               return prev + curr;\n                           } else {\n                               return prev;\n                           }\n                       }, 0);\n                       // means[columnIndex] += ' 元'\n                       // 改变了ele的合计方式，扩展了合计场景\n                       // 你以为就只有上面这样玩吗？错啦，你还可以自定义样式哦\n                       // means[columnIndex] = '<span style=\"color: red\">' + means[columnIndex] + '元</span>'\n                       means[columnIndex] = '<span style=\"color: red\">' + means[columnIndex] + '元</span><br/><span>123</span>'\n                   } else {\n                       means[columnIndex] = '';\n                   }\n                   // 平均值\n                   const precisions = [];\n                   let notNumber = true;\n                   values.forEach(value => {\n                       if (!isNaN(value)) {\n                           notNumber = false;\n                           let decimal = ('' + value).split('.')[1];\n                           precisions.push(decimal ? decimal.length : 0);\n                       }\n                   });\n                   if (!notNumber) {\n                       fenceSums[columnIndex] = values.avg()\n                   } else {\n                       fenceSums[columnIndex] = '';\n                   }\n               }\n           })\n           // 返回一个二维数组的表尾合计(不要平均值，你就不要在数组中添加)\n           return [means, fenceSums]\n       },\n    }\n  };\n<\/script>\n")])])}],!1,null,null,null);t.default=o.exports}}]);