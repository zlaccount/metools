(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{606:function(e,t,n){"use strict";n.r(t);var l={name:"component-exhibition",components:{"firm-demo0":(Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e})({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("ux-grid",{ref:"plxTable",attrs:{border:"","show-overflow":"","keep-source":"",height:"500",highlightCurrentRow:!1,"edit-config":{trigger:"click",mode:"cell"}}},[n("ux-table-column",{attrs:{type:"checkbox",width:"60"}}),e._v(" "),n("ux-table-column",{attrs:{type:"index",width:"50"}}),e._v(" "),n("ux-table-column",{attrs:{field:"name",title:"名字","min-width":"140","edit-render":""},scopedSlots:e._u([{key:"edit",fn:function(t){return[n("el-input",{model:{value:t.row.name,callback:function(n){e.$set(t.row,"name",n)},expression:"scope.row.name"}})]}}])}),e._v(" "),n("ux-table-column",{attrs:{field:"age",title:"年龄",width:"80"},scopedSlots:e._u([{key:"header",fn:function(t){var l=t.column;return[n("span",[e._v(e._s(l.title))])]}}])}),e._v(" "),n("ux-table-column",{attrs:{field:"sex",title:"性别",width:"140","edit-render":""},scopedSlots:e._u([{key:"edit",fn:function(t){return[n("el-select",{on:{change:function(n){return e.$refs.plxTable.updateStatus(t)}},model:{value:t.row.sex,callback:function(n){e.$set(t.row,"sex",n)},expression:"scope.row.sex"}},e._l(e.sexList,(function(e){return n("el-option",{key:e.value,attrs:{label:e.label,value:e.value}})})),1)]}},{key:"default",fn:function(t){var n=t.row;return[e._v(e._s(e.getLabel(n.sex)))]}}])}),e._v(" "),n("ux-table-column",{attrs:{field:"time",title:"时间",width:"140","edit-render":""},scopedSlots:e._u([{key:"edit",fn:function(t){return[n("el-time-select",{staticStyle:{width:"100%"},attrs:{"picker-options":{start:"08:30",step:"00:15",end:"18:30"},placeholder:"选择时间"},model:{value:t.row.time,callback:function(n){e.$set(t.row,"time",n)},expression:"scope.row.time"}})]}}])}),e._v(" "),n("ux-table-column",{attrs:{field:"address",title:"地址",width:"250","edit-render":""},scopedSlots:e._u([{key:"edit",fn:function(t){return[n("el-cascader",{attrs:{options:e.options},model:{value:t.row.address,callback:function(n){e.$set(t.row,"address",n)},expression:"scope.row.address"}})]}},{key:"default",fn:function(t){var n=t.row;return[e._v(e._s(e.getCascader(n.address,e.options)))]}}])}),e._v(" "),n("ux-table-column",{attrs:{field:"single",title:"单身狗?",width:"80"},scopedSlots:e._u([{key:"default",fn:function(t){return[n("el-switch",{attrs:{"active-color":"#13ce66","inactive-color":"#ff4949"},model:{value:t.row.single,callback:function(n){e.$set(t.row,"single",n)},expression:"scope.row.single"}})]}}])}),e._v(" "),n("ux-table-column",{attrs:{title:"操作",width:"80"},scopedSlots:e._u([{key:"default",fn:function(t){var l=t.row;return[n("el-button",{on:{click:function(t){return e.saveEvent(l)}}},[e._v("保存")])]}}])}),e._v(" "),e._l(e.columns,(function(t){return e._e()}))],2)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[],columns:[],sexList:[{value:1,label:"男"},{value:2,label:"女"},{value:3,label:"未知"}],options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]}]}},mounted:function(){var e=this;setTimeout((function(){e.columns=Array.from({length:200},(function(e,t){return{prop:"name",id:t,label:"名字"+t,width:200,sortable:1===t,resizable:!0}})),e.tableData=Array.from({length:500},(function(e,t){return{id:t+1,date:"2016-05-03",name:"张三"+t,sex:1,age:18+t,time:"9:10",address:["zhinan","shejiyuanze","kekong"],single:t<2}})),e.$refs.plxTable.reloadData(e.tableData),console.log(e.$refs.plxTable.tableExample())}))},methods:{saveEvent:function(e){console.log(this.$refs.plxTable.isUpdateByRow(e)),this.$refs.plxTable.isUpdateByRow(e)?(this.$refs.plxTable.reloadRow(e,null,null),this.$message({message:"恭喜你，保存成功",type:"success"})):this.$message({message:"保存失败，你没改变当前行的数据",type:"error"})},getLabel:function(e){var t=this.sexList.filter((function(t){return t.value===e}))[0];return t?t.label:""},getCascader:function(e,t){var n=e||[],l=[];return function e(t,a){var i=n[t];a&&n.length>t&&a.forEach((function(n){n.value===i&&(l.push(n.label),e(++t,n.children))}))}(0,t),l.join(" / ")}}})}},a=n(46),i=Object(a.a)(l,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",[this._m(0),t("p",[this._v("1.首先在ux-grid上绑定 keep-source属性，edit-config = {trigger: 'click',// 点击触发， mode: 'row' // 作用点在谁身上 row表示行，cell: 表示单元格}")]),t("p",[this._v("2.然后再列上需要定义edit-render属性表示是可以编辑的列，，添加了呢，然后头部header会出现有编辑图形的icon啦，代表是可以编辑的行")]),t("p",[this._v("3.设置 keep-source 开启保持原始值状态，对于某些需要局部保存的场景，可以在数据保存完成后调用 reloadRow 方法加载行数据并恢复到初始状态")]),t("p",[this._v("4.可以支持大量的列")]),t("div",[this._m(1),t("template",{slot:"source"},[t("firm-demo0")],1),t("template",{slot:"highlight"},[this._m(2)])],2)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"ji-chu-bian-ji-biao-ge-dian-ji-hong-fa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ji-chu-bian-ji-biao-ge-dian-ji-hong-fa"}},[this._v("¶")]),this._v(" 基础编辑表格（点击触发）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("p",[this._v("5.最后呢，你需要在列上自定义编辑时的渲染模板，v-slot:edit代表是自定义编辑时显示的视图, v-slot:header是自定义头部啦")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[this._v('  <template>\n   <ux-grid border\n             show-overflow\n             ref="plxTable"\n             keep-source\n             height="500"\n             :highlightCurrentRow="false"\n             :edit-config="{trigger: \'click\', mode: \'cell\'}">\n             <ux-table-column type="checkbox" width="60"></ux-table-column>\n             <ux-table-column type="index" width="50"></ux-table-column>\n             <ux-table-column field="name" title="名字" min-width="140" edit-render>\n               <template v-slot:edit="scope">\n                 <el-input v-model="scope.row.name"></el-input>\n               </template>\n             </ux-table-column>\n             <ux-table-column field="age" title="年龄"  width="80">\n               <template v-slot:header="{ column }">\n                 <span>{{ column.title }}</span>\n               </template>\n             </ux-table-column>\n             <ux-table-column field="sex" title="性别" width="140" edit-render>\n               <template v-slot:edit="scope">\n                 <el-select v-model="scope.row.sex" @change="$refs.plxTable.updateStatus(scope)">\n                   <el-option v-for="item in sexList" :key="item.value" :label="item.label" :value="item.value"></el-option>\n                 </el-select>\n               </template>\n               <template v-slot="{ row }">{{ getLabel(row.sex) }}</template>\n             </ux-table-column>\n             <ux-table-column field="time" title="时间" width="140" edit-render>\n                <template v-slot:edit="scope">\n                    <el-time-select\n                      style="width: 100%"\n                      v-model="scope.row.time"\n                      :picker-options="{\n                        start: \'08:30\',\n                        step: \'00:15\',\n                        end: \'18:30\'\n                      }"\n                      placeholder="选择时间">\n                    </el-time-select>\n                </template>\n              </ux-table-column>\n              <ux-table-column field="address" title="地址" width="250" edit-render>\n                   \x3c!--这个呢是编辑状态下的方式--\x3e\n                  <template v-slot:edit="scope">\n                      <el-cascader\n                          v-model="scope.row.address"\n                          :options="options"></el-cascader>\n                  </template>\n                  \x3c!--这个代表是自定义行中的显示（因为我需要对我，el-cascader选出来的信息进行转换，选出来是个数组）--\x3e\n                   <template v-slot="{ row }">{{ getCascader(row.address, options) }}</template>\n               </ux-table-column>\n                <ux-table-column field="single" title="单身狗?" width="80">\n                      \x3c!--这个呢是编辑状态下的方式--\x3e\n                     <template v-slot="scope">\n                        <el-switch\n                           v-model="scope.row.single"\n                           active-color="#13ce66"\n                           inactive-color="#ff4949">\n                         </el-switch>\n                     </template>\n                </ux-table-column>\n               <ux-table-column title="操作" width="80">\n                  <template v-slot="{ row }">\n                     <el-button @click="saveEvent(row)">保存</el-button>\n                  </template>\n               </ux-table-column>\n\n               \x3c!--试试多个,先搞个v-if隐藏掉，反正可以支持大量的列，列多了我眼睛花，注释掉了哈！！！--\x3e\n              <ux-table-column\n                       v-if="false"\n                       v-for="item in columns"\n                       :key="item.id"\n                       :resizable="item.resizable"\n                       :field="item.prop"\n                       edit-render\n                       :title="item.label"\n                       :sortable="item.sortable"\n                       :width="item.width">\n                   <template v-slot:edit="scope">\n                      <el-input v-model="scope.row.name"></el-input>\n                   </template>\n              </ux-table-column>\n           </ux-grid>\n  </template>\n\n  <script>\n    export default {\n       data () {\n           return {\n             tableData: [],\n             columns: [],\n             sexList: [\n                { value: 1,label: \'男\' },\n                { value: 2,label: \'女\'},\n                { value: 3,label: \'未知\'}\n             ],\n             options: [{\n                value: \'zhinan\',\n                label: \'指南\',\n                children: [{\n                  value: \'shejiyuanze\',\n                  label: \'设计原则\',\n                  children: [{\n                    value: \'yizhi\',\n                    label: \'一致\'\n                  }, {\n                    value: \'fankui\',\n                    label: \'反馈\'\n                  }, {\n                    value: \'xiaolv\',\n                    label: \'效率\'\n                  }, {\n                    value: \'kekong\',\n                    label: \'可控\'\n                  }]\n                }, {\n                  value: \'daohang\',\n                  label: \'导航\',\n                  children: [{\n                    value: \'cexiangdaohang\',\n                    label: \'侧向导航\'\n                  }, {\n                    value: \'dingbudaohang\',\n                    label: \'顶部导航\'\n                  }]\n                }]\n              }]\n           }\n         },\n       mounted () {\n        // 延迟加载\n         setTimeout (() => {\n            this.columns = Array.from({ length: 200 }, (_, idx) => ({\n                    prop: \'name\',\n                    id: idx,\n                    label: \'名字\' + idx,\n                    width: 200,\n                    sortable: idx === 1,\n                    resizable: true\n             }))\n             this.tableData = Array.from({ length: 500 }, (_, idx) => ({\n                id: idx + 1,\n                date: \'2016-05-03\',\n                name: \'张三\' + idx,\n                sex: 1,\n                age: 18 + idx,\n                time: \'9:10\',\n                address: [\'zhinan\', \'shejiyuanze\', \'kekong\'],\n                single: idx < 2\n             }))\n             // 这样设置大量数据的表格\n             this.$refs.plxTable.reloadData(this.tableData)\n             // 获取表格实例，里面可以得到列，表格数据等等\n             console.log(this.$refs.plxTable.tableExample())\n         })\n       },\n       methods: {\n          // 点击保存\n          saveEvent(row) {\n            // 判断是否发生改变\n            console.log(this.$refs.plxTable.isUpdateByRow(row))\n            if (this.$refs.plxTable.isUpdateByRow(row)) {\n                   // 局部保存，并将行数据恢复到初始状态（如果 第二个参数record 为空则不改动行数据，只恢复状态）\n                   // 必须执行这个，不然下次点击保存，还是保存成功哦！状态没改变哦\n                    this.$refs.plxTable.reloadRow(row, null, null)\n                  // ...保存逻辑相关（后端呀，或者前端呀）\n                  this.$message({\n                    message: \'恭喜你，保存成功\',\n                    type: \'success\'\n                 });\n            } else {\n               this.$message({\n                  message: \'保存失败，你没改变当前行的数据\',\n                  type: \'error\'\n               });\n            }\n          },\n          // 转换男女\n          getLabel (val) {\n             const item = this.sexList.filter(item => item[\'value\'] === val)[0]\n             return item ? item.label : \'\'\n           },\n          // 转换地址\n          getCascader (value, list) {\n              const values = value || []\n              const labels = []\n              const cascaderData = function (index, list) {\n                const val = values[index]\n                if (list && values.length > index) {\n                  list.forEach(item => {\n                    if (item.value === val) {\n                      labels.push(item.label)\n                      cascaderData(++index, item.children)\n                    }\n                  })\n                }\n              }\n              cascaderData(0, list)\n              return labels.join(\' / \')\n          }\n       }\n    }\n  <\/script>\n')])])}],!1,null,null,null);t.default=i.exports}}]);