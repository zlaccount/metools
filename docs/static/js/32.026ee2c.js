(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{615:function(e,t,n){"use strict";n.r(t);var l={name:"component-exhibition",components:{"firm-demo0":(Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e})({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",[n("ux-grid",{ref:"plxTable",attrs:{"max-height":e.height,"show-overflow":"","show-summary":"","summary-method":e.summaryMethod,"show-header-overflow":"ellipsis"}},[n("ux-table-column",{attrs:{title:"基本信息"}},[n("ux-table-column",{attrs:{type:"index",width:"60"}}),e._v(" "),n("ux-table-column",{attrs:{field:"name",title:"Name"}})],1),e._v(" "),n("ux-table-column",{attrs:{title:"更多信息"}},[n("ux-table-column",{attrs:{field:"role",title:"Role",width:"100"}}),e._v(" "),n("ux-table-column",{attrs:{title:"详细信息"}},[n("ux-table-column",{attrs:{field:"sex",title:"Sex",width:"100"}}),e._v(" "),n("ux-table-column",{attrs:{field:"age",title:"Age",width:"100"}})],1)],1),e._v(" "),n("ux-table-column",{attrs:{title:"分类信息"}},[n("ux-table-column",{attrs:{field:"date3",title:"Date",width:"100"}})],1),e._v(" "),n("ux-table-column",{attrs:{field:"address",title:"Address",width:"100","show-overflow":""}}),e._v(" "),e._l(e.columns,(function(e){return n("ux-table-column",{key:e.id,attrs:{resizable:e.resizable,field:e.prop,title:e.label,sortable:e.sortable,width:e.width,fixed:e.fixed}})})),e._v(" "),n("ux-table-column",{attrs:{title:"额外信息",width:"60",field:"address"}})],2)],1)]],2)},staticRenderFns:[]},{data:function(){return{height:0,columns:[]}},mounted:function(){var e=this;this.height=500,setTimeout((function(){var t=["name","sex","describe"];e.columns=Array.from({length:50},(function(e,n){return{prop:n>2?t[2]:t[n],id:n,label:n>2?t[2]:t[n],width:200,sortable:1===n,resizable:!0}}));var n=Array.from({length:5e3},(function(e,t){return{id:t+1,name:"pl"+t,sex:t,describe:"欢迎使用plx"+t}}));e.datas=n,e.$refs.plxTable.reloadData(e.datas)}))},methods:{summaryMethod:function(e){var t=e.columns,n=e.data,l=[];return t.forEach((function(e,t){if(0===t)l.push("合计");else{var a=n.map((function(t){return Number(t[e.property])}));a.every((function(e){return isNaN(e)}))?l[t]="":(l[t]=a.reduce((function(e,t){var n=Number(t);return isNaN(n)?e:e+t}),0),l[t]+=" 元")}})),[l]}}})}},a=n(46),i=Object(a.a)(l,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",[this._m(0),t("p",[this._v("大数据不建议使用双向绑定的 data 属性（vue 监听会大数据会短暂的卡顿），建议使用reloadData函数 。")]),t("div",[this._m(1),t("template",{slot:"source"},[t("firm-demo0")],1),t("template",{slot:"highlight"},[this._m(2)])],2)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"duo-ji-tou"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#duo-ji-tou"}},[this._v("¶")]),this._v(" 多级头")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("p",[this._v("使用多级头，X轴虚拟滚动自动关闭 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[this._v('  <template>\n   <div>\n     <ux-grid\n             ref="plxTable"\n             :max-height="height"\n             show-overflow\n             show-summary\n             :summary-method="summaryMethod"\n             show-header-overflow="ellipsis">\n        <ux-table-column title="基本信息">\n            <ux-table-column type="index" width="60"></ux-table-column>\n            <ux-table-column field="name" title="Name"></ux-table-column>\n          </ux-table-column>\n          <ux-table-column title="更多信息">\n            <ux-table-column field="role" title="Role" width="100"></ux-table-column>\n            <ux-table-column title="详细信息">\n              <ux-table-column field="sex" title="Sex" width="100"></ux-table-column>\n              <ux-table-column field="age" title="Age" width="100"></ux-table-column>\n            </ux-table-column>\n          </ux-table-column>\n          <ux-table-column title="分类信息">\n            <ux-table-column field="date3" title="Date" width="100"></ux-table-column>\n          </ux-table-column>\n          <ux-table-column field="address" title="Address" width="100" show-overflow></ux-table-column>\n         <ux-table-column\n                 v-for="item in columns"\n                 :key="item.id"\n                 :resizable="item.resizable"\n                 :field="item.prop"\n                 :title="item.label"\n                 :sortable="item.sortable"\n                 :width="item.width"\n                 :fixed="item.fixed"/>\n         <ux-table-column title="额外信息" width="60" field="address"></ux-table-column>\n     </ux-grid>\n   </div>\n </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n          height: 0,\n          columns: []\n        }\n      },\n      mounted () {\n          this.height = 500 // 动态设置高度\n          // 异步设置数据，这样解决初次进来不卡，由于加载数据很大啦，你没必要这样做哦\n           setTimeout(() => {\n              let col = [\'name\', \'sex\', \'describe\']\n              this.columns = Array.from({ length: 50 }, (_, idx) => ({\n                      prop: idx > 2 ? col[2] : col[idx],\n                      id: idx,\n                      label: idx > 2 ? col[2] : col[idx],\n                      width: 200,\n                      sortable: idx === 1,\n                      resizable: true\n              }))\n              const data = Array.from({ length: 5000 }, (_, idx) => ({\n                   id: idx + 1,\n                   name: \'pl\' + idx,\n                   sex: idx,\n                   describe: \'欢迎使用plx\' + idx\n              }))\n              this.datas = data // 知道为啥datas不在 data()方法里面定义吗？嘻嘻\n              this.$refs.plxTable.reloadData(this.datas)\n           })\n      },\n      methods: {\n       summaryMethod ({ columns, data }) {\n          const means = [] // 合计\n          columns.forEach((column, columnIndex) => {\n              if (columnIndex === 0) {\n                  means.push(\'合计\')\n              } else {\n                  const values = data.map(item => Number(item[column.property]));\n                  // 合计\n                  if (!values.every(value => isNaN(value))) {\n                      means[columnIndex] = values.reduce((prev, curr) => {\n                          const value = Number(curr);\n                          if (!isNaN(value)) {\n                              return prev + curr;\n                          } else {\n                              return prev;\n                          }\n                      }, 0);\n                      means[columnIndex] += \' 元\'\n                  } else {\n                      means[columnIndex] = \'\';\n                  }\n              }\n          })\n          // 返回一个二维数组的表尾合计(不要平均值，你就不要在数组中添加)\n          return [means]\n        },\n      }\n    }\n  <\/script>\n')])])}],!1,null,null,null);t.default=i.exports}}]);