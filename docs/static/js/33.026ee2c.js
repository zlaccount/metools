(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{616:function(e,t,n){"use strict";n.r(t);var i={name:"component-exhibition",components:{"firm-demo0":(Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e})({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("ux-grid",{ref:"plxTable",staticClass:"reverse-table",attrs:{"show-header":!1,"max-height":485,"show-header-overflow":"ellipsis"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{newColumns:[{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"},{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"},{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"},{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"},{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"},{field:"name",title:"名字"},{field:"sex",title:"性别"},{field:"age",title:"年龄"}]}},mounted:function(){var e=this;setTimeout((function(){e.reverseTable()}))},methods:{reverseTable:function(){var e=Array.from({length:1e3},(function(e,t){return{id:t+1,name:"pl"+t,sex:t,age:t+"岁"}})),t=this.newColumns.map((function(t){var n={col0:t.title};return e.forEach((function(e,i){n["col"+(i+1)]=e[t.field]})),n})),n=[{field:"col0",fixed:"left",width:80}];e.forEach((function(e,t){n.push({field:"col"+(t+1),minWidth:120})})),this.$refs.plxTable.reloadData(t),this.$refs.plxTable.reloadColumn(n)}}})}},l=n(46),a=Object(l.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",[this._m(0),t("p",[this._v("大数据不建议使用双向绑定的 data 属性（vue 监听会大数据会短暂的卡顿），建议使用reloadData函数 。")]),t("div",[t("template",{slot:"source"},[t("firm-demo0")],1),t("template",{slot:"highlight"},[this._m(1)])],2)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"fan-zhuan-lie-he-xing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fan-zhuan-lie-he-xing"}},[this._v("¶")]),this._v(" 反转列和行")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[this._v("  <template>\n   <div>\n     <ux-grid\n             ref=\"plxTable\"\n             class=\"reverse-table\"\n             :show-header=\"false\"\n             :max-height=\"485\"\n             show-header-overflow=\"ellipsis\">\n     </ux-grid>\n   </div>\n </template>\n\n  <script>\n    export default {\n      data() {\n        return {\n           newColumns: [\n             { field: 'name', title: '名字' },\n             { field: 'sex', title: '性别' },\n             { field: 'age', title: '年龄' },\n             { field: 'name', title: '名字' },\n             { field: 'sex', title: '性别' },\n             { field: 'age', title: '年龄' },\n             { field: 'name', title: '名字' },\n              { field: 'sex', title: '性别' },\n              { field: 'age', title: '年龄' },\n              { field: 'name', title: '名字' },\n              { field: 'sex', title: '性别' },\n              { field: 'age', title: '年龄' },\n              { field: 'name', title: '名字' },\n             { field: 'sex', title: '性别' },\n              { field: 'age', title: '年龄' },\n              { field: 'name', title: '名字' },\n              { field: 'sex', title: '性别' },\n            { field: 'age', title: '年龄' },\n           ]\n        }\n      },\n      mounted () {\n        // 延迟主要解决我进来页面初次卡，加载这么大的数据量。这里主要为了进来页面不卡，然后再去慢慢加载！\n        setTimeout (() =>{\n           this.reverseTable()\n        })\n      },\n      methods: {\n           // 反转\n          reverseTable () {\n             const data = Array.from({ length: 1000 }, (_, idx) => ({\n               id: idx + 1,\n               name: 'pl' + idx,\n               sex: idx,\n               age: idx + '岁'\n            }))\n            const buildData = this.newColumns.map(column => {\n              const item = { col0: column.title }\n              data.forEach((row, index) => {\n                item[`col${index + 1}`] = row[column.field]\n              })\n              return item\n            })\n            // 固定项\n            const buildColumns = [{\n              field: 'col0',\n              fixed: 'left',\n              width: 80\n            }]\n            data.forEach((item, index) => {\n              buildColumns.push({\n                field: `col${index + 1}`,\n                minWidth: 120\n              })\n            })\n            this.$refs.plxTable.reloadData(buildData)\n            this.$refs.plxTable.reloadColumn(buildColumns)\n          }\n      }\n    }\n  <\/script>\n")])])}],!1,null,null,null);t.default=a.exports}}]);